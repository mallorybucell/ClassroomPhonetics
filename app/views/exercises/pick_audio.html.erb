<div class="container">
  <ul class="breadcrumb">
    <li><a href="#">Select Task</a></li>
    <li class="active">Choose Audio</li>
  </ul>
  <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
    <div class="panel panel-default">
      <div class="panel-heading" role="tab" id="headingOne">
        <h4 class="panel-title">
          <a data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
            Find audio with Forvo
          </a>
        </h4>
      </div>
      <div id="collapseOne" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOne">
        <div class="panel-body">
          <div id="forvo-audio-params">
            <%= form_tag get_from_forvo_path do %>
            <%= label_tag :word, "Enter a word: " %>
            <%= text_field_tag :word, nil, :required => true %>
            <br>
            <%= label_tag :limit, "Choose the number of pronunciations to return: " %>
            <% numbers = (1..10).to_a %>
            <%= select_tag :limit, options_for_select(numbers, selected: nil) %>
            <br>
            <button>Get Options from Forvo</button>
            <% end %>
          </div>
          <!-- TODO AJAX the search results to here; help for inability to upload -->
        </div>
      </div>
    </div>
  </div>
  <div class="panel panel-default">
    <div class="panel-heading" role="tab" id="headingTwo">
      <h4 class="panel-title">
        <a class="collapsed" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo" onclick="init()">
          Record your own audio
        </a>
      </h4>
    </div>
    <div id="collapseTwo" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
      <div class="panel-body">
                <button onclick="startRecording(this);">record</button>
        <button onclick="stopRecording(this);" disabled>stop</button>

        <h5>Recordings: </h5>
        <ul id="recordingslist"></ul>

        <h5>Recorder Status: </h5>
        <pre id="log"></pre>

        <script>
          function __log(e, data) {
            log.innerHTML += "\n" + e + " " + (data || '');
          }

          var audio_context;
          var recorder;

          function startUserMedia(stream) {
            var input = audio_context.createMediaStreamSource(stream);
        // __log('Media stream created.');

        // Uncomment if you want the audio to feedback directly
        //input.connect(audio_context.destination);
        //__log('Input connected to audio context destination.');
        
        recorder = new Recorder(input, {workerPath: "/recorderWorker.js"});
        __log('Click the record button to start.');
      }

      function startRecording(button) {
        recorder && recorder.record();
        button.disabled = true;
        button.nextElementSibling.disabled = false;
        __log('Recording...');
      }

      function stopRecording(button) {
        recorder && recorder.stop();
        button.disabled = true;
        button.previousElementSibling.disabled = false;
        __log('Stopped recording.');
        
        // create WAV download link using audio data blob
        createDownloadLink();
        
        recorder.clear();
      }

      function createDownloadLink() {
        recorder && recorder.exportWAV(function(blob) {
          var data = new FormData();
          data.append("blob", blob);
          $.ajax("/save_recording", {
            type: "POST",
            data: data,
            processData: false,
            contentType: false
          });
          var url = URL.createObjectURL(blob);
          var li = document.createElement('li');
          var au = document.createElement('audio');
          var hf = document.createElement('a');
          
          au.controls = true;
          au.src = url;
          hf.href = url;
          hf.download = new Date().toISOString() + '.wav';
          hf.innerHTML = hf.download;
          li.appendChild(au);
          li.appendChild(hf);
          recordingslist.appendChild(li);
        });
      }

      function init() {
        try {
          // webkit shim
          window.AudioContext = window.AudioContext || window.webkitAudioContext;
          navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia;
          window.URL = window.URL || window.webkitURL;
          
          audio_context = new AudioContext;
          // __log('Audio context set up.');
          // __log('navigator.getUserMedia ' + (navigator.getUserMedia ? 'available.' : 'not present!'));
        } catch (e) {
          alert('You must allow this program to use your microphone to use the record audio feature. Click allow by the nav bar to enable.' );
        }
        
        navigator.getUserMedia({audio: true}, startUserMedia, function(e) {
          // __log('No live audio input: ' + e);
        });
      };
    </script>
      </div>
    </div>
  </div>
  <div class="panel panel-default">
    <div class="panel-heading" role="tab" id="headingThree">
      <h4 class="panel-title">
        <a class="collapsed" data-toggle="collapse" data-parent="#accordion" href="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
          Use existing audio
        </a>
      </h4>
    </div>
    <div id="collapseThree" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingThree">
      <div class="panel-body">
        <table class="table table-striped table-hover">
          <thead>
          </thead>
          <tbody>
            <% @_existing_audio.each do |sound| %>
            <tr>
              <td><%= Audio.format_forvo_js_for_insert(sound.forvo_id) %></td>
              <td>
                <%= form_tag exercise_add_exist_audio_path do %>
                <%= hidden_field_tag "audio_id", sound.id %>
                <button>Add Audio to Exercise</button>
                <% end %>
              </td>
            </tr>
            <% end %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>